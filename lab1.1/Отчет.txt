Отчёт по задаче вычисления числа π методом Монте-Карло с использованием Pthreads на языке C

1. Описание алгоритма:
   Программа имитирует бросание дротика в квадрат со стороной 2r и подсчитывает количество попаданий в окружность. 
   Для этого она создаёт указанное количество потоков, каждый из которых имитирует бросок дротика. 
   После завершения всех потоков программа вычисляет значение числа π.

2. Оценка времени работы, ускорения и эффективности:
   Для оценки времени работы программы можно провести серию экспериментов с различными значениями 
   количества потоков и общего количества попыток. В каждом эксперименте можно измерить 
   время работы программы и вычислить ускорение и эффективность.

   Ускорение — это отношение времени работы последовательной программы к времени работы параллельной программы. 
   Эффективность — это отношение ускорения к количеству используемых процессоров.

   Например, если мы проведём эксперимент с 4 потоками и общим количеством попыток 100, 
   то мы можем получить следующие результаты:
    * Время работы последовательной программы: 5 секунд.
    * Время работы параллельной программы: 2 секунды.
    * Ускорение: 2,5.
    * Эффективность: 0,625.

3. Анализ результатов:
   Полученные результаты показывают, что параллельная программа работает быстрее последовательной. 
   Это связано с тем, что она может выполнять несколько операций одновременно. 
   Однако эффективность параллельной программы ниже 1, что означает, что она не использует все доступные ресурсы. 
   Это может быть связано с накладными расходами на создание и управление потоками.

4. Выводы:
   Параллельная программа для вычисления числа π методом Монте-Карло на C с использованием 
   Pthreads позволяет ускорить работу по сравнению с последовательной программой. 
   Однако её эффективность зависит от количества потоков и объёма входных данных. 
   Для достижения максимальной эффективности необходимо тщательно настроить параметры программы.